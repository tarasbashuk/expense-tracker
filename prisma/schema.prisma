generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  clerkUserId  String        @unique
  email        String        @unique
  firstName    String?
  lastName     String?
  fullName     String?
  imageUrl     String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  settings     Settings?
  transactions Transaction[]
}

model Transaction {
  id                     String          @id @default(uuid())
  text                   String
  amount                 Float
  category               String
  currency               Currency        @default(EUR)
  type                   TransactionType @default(Expense)
  userId                 String
  createdAt              DateTime        @default(now())
  updatedAt              DateTime        @updatedAt
  amountDefaultCurrency  Float
  date                   DateTime        @db.Date
  isCreditTransaction    Boolean?        @default(false)
  isRecurring            Boolean?        @default(false)
  recurringEndDate       DateTime?       @db.Date
  CCExpenseTransactionId String?         @unique
  user                   User            @relation(fields: [userId], references: [clerkUserId], onDelete: Cascade)

  @@index([userId])
  @@index([isRecurring, recurringEndDate])
}

model Settings {
  id              String   @id @default(uuid())
  language        Language @default(ENG)
  theme           Theme    @default(Light)
  defaultCurrency Currency @default(EUR)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  initialAmount   Float?
  clerkUserId     String   @unique
  encryptData     Boolean? @default(false)
  user            User     @relation(fields: [clerkUserId], references: [clerkUserId], onDelete: Cascade)

  @@index([clerkUserId])
}

enum Currency {
  EUR
  PLN
  UAH
  USD
}

enum Language {
  ENG
  UKR
}

enum Theme {
  Light
  Dark
}

enum TransactionType {
  Expense
  Income
}
